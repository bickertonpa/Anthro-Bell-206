filter(adjustment == "cyclic_fwd") %>%
dplyr::select(min, max) %>%
slice(1)  # In case there's more than one row
View(cyclic_limits)
df <- df_motion %>%
mutate(
ID = as.numeric(ID),
cyclic_pct_fwd = (cyclic_limits$max-fwd_deg)/(cyclic_limits$max-cyclic_limits$min)
) %>%
left_join(df_anthros %>% mutate(ID = as.numeric(ID)), by = "ID")
View(df)
# Extract full forward and aft values from the control data
cyclic_limits <- df_range_of_motion %>%
filter(adjustment == "cyclic_fwd") %>%
dplyr::select(min, max) %>%
slice(1)  # In case there's more than one row
df <- df_motion %>%
mutate(
ID = as.numeric(ID),
cyclic_pct_fwd = (cyclic_limits$max-fwd_deg)/(cyclic_limits$max-cyclic_limits$min)
) %>%
left_join(df_anthros %>% mutate(ID = as.numeric(ID)), by = "ID")
View(df)
#Join anthros
# Extract full forward and aft values from the control data
cyclic_limits <- df_range_of_motion %>%
filter(adjustment == "cyclic_fwd") %>%
dplyr::select(min, max) %>%
slice(1)  # In case there's more than one row
df <- df_motion %>%
mutate(
ID = as.numeric(ID),
cyclic_pct_fwd = (cyclic_limits$max-fwd_deg)/(cyclic_limits$max-cyclic_limits$min)
) %>%
left_join(df_anthros %>% mutate(ID = as.numeric(ID)), by = "ID")
cor_test_result <- cor.test(df$`Thumbtip Reach`, df$cyclic_pct_fwd, method = "pearson")
cor_value <- round(cor_test_result$estimate, 2)
# Print detailed summary
print(cor_test_result)
ggplot(df, aes(x = `Thumbtip Reach`, y = cyclic_pct_fwd)) +
geom_point(size = 3, color = "steelblue") +
labs(
title = "Zone 1 Cyclic Control Motion (% fwd) vs. Thumbtip Reach",
subtitle = paste0("Pearson correlation: r = ", cor_value),
x = "Thumbtip Reach (mm)",
y = "Cyclic Control Motion (% fwd)"
) +
scale_y_reverse()+
geom_text(
data = df %>% as.data.frame(),
aes(label = ID, x = `Thumbtip Reach`, y = cyclic_pct_fwd),
vjust = -1, hjust = 1, size = 3
) +
# Correlation line with 95% CI
geom_smooth(method = "lm", se = TRUE,level = 0.95, color = "blue", linewidth = 0.8) +
theme_minimal()
# Fit linear model
model <- lm(cyclic_pct_fwd ~ `Thumbtip Reach` +
`Acromial Height - Sitting`, data = df)
step_model <- stepAIC(model, direction = "both")
summary(step_model)
# Generate predicted values and confidence intervals
df$fwd_deg_predicted <- predict(step_model)
pred_frame <- data.frame(
predicted = df$fwd_deg_predicted,
actual = df$fwd_deg,
ID = df$ID
)
# Extract coefficients and R-squared
coefs <- coef(step_model)
eq <- paste0(
"fwd_deg = ", round(coefs[1], 2),
ifelse(coefs[2] < 0, " - ", " + "), abs(round(coefs[2], 2)), " × ", names(coefs)[2]
)
if (length(coefs) > 2) {
for (i in 3:length(coefs)) {
eq <- paste0(
eq,
ifelse(coefs[i] < 0, " - ", " + "), abs(round(coefs[i], 2)), " × ", names(coefs)[i]
)
}
}
r_squared <- summary(step_model)$r.squared
subtitle_text <- paste(eq, sprintf("  |  R² = %.2f", r_squared))
ggplot(pred_frame, aes(x = predicted, y = actual)) +
geom_point(size = 3, color = "steelblue") +
geom_smooth(method = "lm", se = TRUE, level = 0.95, color = "black", fill = "lightblue", linetype = "solid") +
geom_abline(slope = 1, intercept = 0, linetype = "dashed", color = "gray") +
labs(
title = "Predicted vs Actual Zone 1 Cyclic Fwd Reach (%)",
subtitle = subtitle_text,
x = "Predicted Zone 1 Fwd Cyclic (%)",
y = "Actual Zone 1 Fwd Cyclic (%)"
) +
geom_text(
data = pred_frame %>% as.data.frame(),
aes(label = ID, x = predicted, y = actual),
vjust = -1, hjust = 1, size = 3
) +
theme(
plot.margin = margin(t = 10, r = 50, b = 10, l = 10)
) +
theme_minimal()
colnames(df)
pred_frame <- data.frame(
predicted = df$cyclic_pct_fwd_predicted,
actual = df$cyclic_pct_fwd,
ID = df$ID
)
# Generate predicted values and confidence intervals
df$cyclic_pct_fwd_predicted <- predict(step_model)
pred_frame <- data.frame(
predicted = df$cyclic_pct_fwd_predicted,
actual = df$cyclic_pct_fwd,
ID = df$ID
)
#Join anthros
# Extract full forward and aft values from the control data
cyclic_limits <- df_range_of_motion %>%
filter(adjustment == "cyclic_fwd") %>%
dplyr::select(min, max) %>%
slice(1)  # In case there's more than one row
df <- df_motion %>%
mutate(
ID = as.numeric(ID),
cyclic_pct_fwd = (cyclic_limits$max-fwd_deg)/(cyclic_limits$max-cyclic_limits$min)
) %>%
left_join(df_anthros %>% mutate(ID = as.numeric(ID)), by = "ID")
cor_test_result <- cor.test(df$`Thumbtip Reach`, df$cyclic_pct_fwd, method = "pearson")
cor_value <- round(cor_test_result$estimate, 2)
# Print detailed summary
print(cor_test_result)
ggplot(df, aes(x = `Thumbtip Reach`, y = cyclic_pct_fwd)) +
geom_point(size = 3, color = "steelblue") +
labs(
title = "Zone 1 Cyclic Control Motion (% fwd) vs. Thumbtip Reach",
subtitle = paste0("Pearson correlation: r = ", cor_value),
x = "Thumbtip Reach (mm)",
y = "Cyclic Control Motion (% fwd)"
) +
scale_y_reverse()+
geom_text(
data = df %>% as.data.frame(),
aes(label = ID, x = `Thumbtip Reach`, y = cyclic_pct_fwd),
vjust = -1, hjust = 1, size = 3
) +
# Correlation line with 95% CI
geom_smooth(method = "lm", se = TRUE,level = 0.95, color = "blue", linewidth = 0.8) +
theme_minimal()
# Fit linear model
model <- lm(cyclic_pct_fwd ~ `Thumbtip Reach` +
`Acromial Height - Sitting`, data = df)
step_model <- stepAIC(model, direction = "both")
summary(step_model)
# Generate predicted values and confidence intervals
df$cyclic_pct_fwd_predicted <- predict(step_model)
pred_frame <- data.frame(
predicted = df$cyclic_pct_fwd_predicted,
actual = df$cyclic_pct_fwd,
ID = df$ID
)
# Extract coefficients and R-squared
coefs <- coef(step_model)
eq <- paste0(
"fwd_deg = ", round(coefs[1], 2),
ifelse(coefs[2] < 0, " - ", " + "), abs(round(coefs[2], 2)), " × ", names(coefs)[2]
)
if (length(coefs) > 2) {
for (i in 3:length(coefs)) {
eq <- paste0(
eq,
ifelse(coefs[i] < 0, " - ", " + "), abs(round(coefs[i], 2)), " × ", names(coefs)[i]
)
}
}
r_squared <- summary(step_model)$r.squared
subtitle_text <- paste(eq, sprintf("  |  R² = %.2f", r_squared))
ggplot(pred_frame, aes(x = predicted, y = actual)) +
geom_point(size = 3, color = "steelblue") +
geom_smooth(method = "lm", se = TRUE, level = 0.95, color = "black", fill = "lightblue", linetype = "solid") +
geom_abline(slope = 1, intercept = 0, linetype = "dashed", color = "gray") +
labs(
title = "Predicted vs Actual Zone 1 Cyclic Fwd Reach (%)",
subtitle = subtitle_text,
x = "Predicted Zone 1 Fwd Cyclic (%)",
y = "Actual Zone 1 Fwd Cyclic (%)"
) +
geom_text(
data = pred_frame %>% as.data.frame(),
aes(label = ID, x = predicted, y = actual),
vjust = -1, hjust = 1, size = 3
) +
theme(
plot.margin = margin(t = 10, r = 50, b = 10, l = 10)
) +
theme_minimal()
#Join anthros
# Extract full forward and aft values from the control data
cyclic_limits <- df_range_of_motion %>%
filter(adjustment == "cyclic_fwd") %>%
dplyr::select(min, max) %>%
slice(1)  # In case there's more than one row
df <- df_motion %>%
mutate(
ID = as.numeric(ID),
cyclic_pct_fwd = (cyclic_limits$max-fwd_deg)/(cyclic_limits$max-cyclic_limits$min)
) %>%
left_join(df_anthros %>% mutate(ID = as.numeric(ID)), by = "ID")
cor_test_result <- cor.test(df$`Thumbtip Reach`, df$cyclic_pct_fwd, method = "pearson")
cor_value <- round(cor_test_result$estimate, 2)
# Print detailed summary
print(cor_test_result)
ggplot(df, aes(x = `Thumbtip Reach`, y = cyclic_pct_fwd)) +
geom_point(size = 3, color = "steelblue") +
labs(
title = "Zone 1 Cyclic Control Motion (% fwd) vs. Thumbtip Reach",
subtitle = paste0("Pearson correlation: r = ", cor_value),
x = "Thumbtip Reach (mm)",
y = "Cyclic Control Motion (% fwd)"
) +
geom_text(
data = df %>% as.data.frame(),
aes(label = ID, x = `Thumbtip Reach`, y = cyclic_pct_fwd),
vjust = -1, hjust = 1, size = 3
) +
# Correlation line with 95% CI
geom_smooth(method = "lm", se = TRUE,level = 0.95, color = "blue", linewidth = 0.8) +
theme_minimal()
# Fit linear model
model <- lm(cyclic_pct_fwd ~ `Thumbtip Reach` +
`Acromial Height - Sitting`, data = df)
step_model <- stepAIC(model, direction = "both")
summary(step_model)
# Generate predicted values and confidence intervals
df$cyclic_pct_fwd_predicted <- predict(step_model)
pred_frame <- data.frame(
predicted = df$cyclic_pct_fwd_predicted,
actual = df$cyclic_pct_fwd,
ID = df$ID
)
# Extract coefficients and R-squared
coefs <- coef(step_model)
eq <- paste0(
"fwd_deg = ", round(coefs[1], 2),
ifelse(coefs[2] < 0, " - ", " + "), abs(round(coefs[2], 2)), " × ", names(coefs)[2]
)
if (length(coefs) > 2) {
for (i in 3:length(coefs)) {
eq <- paste0(
eq,
ifelse(coefs[i] < 0, " - ", " + "), abs(round(coefs[i], 2)), " × ", names(coefs)[i]
)
}
}
r_squared <- summary(step_model)$r.squared
subtitle_text <- paste(eq, sprintf("  |  R² = %.2f", r_squared))
ggplot(pred_frame, aes(x = predicted, y = actual)) +
geom_point(size = 3, color = "steelblue") +
geom_smooth(method = "lm", se = TRUE, level = 0.95, color = "black", fill = "lightblue", linetype = "solid") +
geom_abline(slope = 1, intercept = 0, linetype = "dashed", color = "gray") +
labs(
title = "Predicted vs Actual Zone 1 Cyclic Fwd Reach (%)",
subtitle = subtitle_text,
x = "Predicted Zone 1 Fwd Cyclic (%)",
y = "Actual Zone 1 Fwd Cyclic (%)"
) +
geom_text(
data = pred_frame %>% as.data.frame(),
aes(label = ID, x = predicted, y = actual),
vjust = -1, hjust = 1, size = 3
) +
theme(
plot.margin = margin(t = 10, r = 50, b = 10, l = 10)
) +
theme_minimal()
View(df_anthros)
#Join anthros
# Extract full forward and aft values from the control data
cyclic_limits <- df_range_of_motion %>%
filter(adjustment == "cyclic_fwd") %>%
dplyr::select(min, max) %>%
slice(1)  # In case there's more than one row
df <- df_motion %>%
mutate(
ID = as.numeric(ID),
cyclic_pct_fwd = (cyclic_limits$max-fwd_deg)/(cyclic_limits$max-cyclic_limits$min)
) %>%
left_join(df_anthros %>% mutate(ID = as.numeric(ID)), by = "ID")
cor_test_result <- cor.test(df$`Thumbtip Reach`, df$cyclic_pct_fwd, method = "pearson")
cor_value <- round(cor_test_result$estimate, 2)
# Print detailed summary
print(cor_test_result)
ggplot(df, aes(x = `Thumbtip Reach`, y = cyclic_pct_fwd)) +
geom_point(size = 3, color = "steelblue") +
labs(
title = "Zone 1 Cyclic Control Motion (% fwd) vs. Thumbtip Reach",
subtitle = paste0("Pearson correlation: r = ", cor_value),
x = "Thumbtip Reach (mm)",
y = "Cyclic Control Motion (% fwd)"
) +
geom_text(
data = df %>% as.data.frame(),
aes(label = ID, x = `Thumbtip Reach`, y = cyclic_pct_fwd),
vjust = -1, hjust = 1, size = 3
) +
# Correlation line with 95% CI
geom_smooth(method = "lm", se = TRUE,level = 0.95, color = "blue", linewidth = 0.8) +
theme_minimal()
# Fit linear model
model <- lm(cyclic_pct_fwd ~ `Thumbtip Reach`, data = df)
step_model <- stepAIC(model, direction = "both")
summary(step_model)
# Generate predicted values and confidence intervals
df$cyclic_pct_fwd_predicted <- predict(step_model)
pred_frame <- data.frame(
predicted = df$cyclic_pct_fwd_predicted,
actual = df$cyclic_pct_fwd,
ID = df$ID
)
# Extract coefficients and R-squared
coefs <- coef(step_model)
eq <- paste0(
"fwd_deg = ", round(coefs[1], 2),
ifelse(coefs[2] < 0, " - ", " + "), abs(round(coefs[2], 2)), " × ", names(coefs)[2]
)
if (length(coefs) > 2) {
for (i in 3:length(coefs)) {
eq <- paste0(
eq,
ifelse(coefs[i] < 0, " - ", " + "), abs(round(coefs[i], 2)), " × ", names(coefs)[i]
)
}
}
r_squared <- summary(step_model)$r.squared
subtitle_text <- paste(eq, sprintf("  |  R² = %.2f", r_squared))
ggplot(pred_frame, aes(x = predicted, y = actual)) +
geom_point(size = 3, color = "steelblue") +
geom_smooth(method = "lm", se = TRUE, level = 0.95, color = "black", fill = "lightblue", linetype = "solid") +
geom_abline(slope = 1, intercept = 0, linetype = "dashed", color = "gray") +
labs(
title = "Predicted vs Actual Zone 1 Cyclic Fwd Reach (%)",
subtitle = subtitle_text,
x = "Predicted Zone 1 Fwd Cyclic (%)",
y = "Actual Zone 1 Fwd Cyclic (%)"
) +
geom_text(
data = pred_frame %>% as.data.frame(),
aes(label = ID, x = predicted, y = actual),
vjust = -1, hjust = 1, size = 3
) +
theme(
plot.margin = margin(t = 10, r = 50, b = 10, l = 10)
) +
theme_minimal()
#Join anthros
# Extract full forward and aft values from the control data
cyclic_limits <- df_range_of_motion %>%
filter(adjustment == "cyclic_fwd") %>%
dplyr::select(min, max) %>%
slice(1)  # In case there's more than one row
df <- df_motion %>%
mutate(
ID = as.numeric(ID),
cyclic_pct_fwd = (cyclic_limits$max-fwd_deg)/(cyclic_limits$max-cyclic_limits$min)
) %>%
left_join(df_anthros %>% mutate(ID = as.numeric(ID)), by = "ID")
cor_test_result <- cor.test(df$`Thumbtip Reach`, df$cyclic_pct_fwd, method = "pearson")
cor_value <- round(cor_test_result$estimate, 2)
# Print detailed summary
print(cor_test_result)
ggplot(df, aes(x = `Thumbtip Reach`, y = cyclic_pct_fwd)) +
geom_point(size = 3, color = "steelblue") +
labs(
title = "Zone 1 Cyclic Control Motion (% fwd) vs. Thumbtip Reach",
subtitle = paste0("Pearson correlation: r = ", cor_value),
x = "Thumbtip Reach (mm)",
y = "Cyclic Control Motion (% fwd)"
) +
geom_text(
data = df %>% as.data.frame(),
aes(label = ID, x = `Thumbtip Reach`, y = cyclic_pct_fwd),
vjust = -1, hjust = 1, size = 3
) +
# Correlation line with 95% CI
geom_smooth(method = "lm", se = TRUE,level = 0.95, color = "blue", linewidth = 0.8) +
theme_minimal()
# Fit linear model
model <- lm(cyclic_pct_fwd ~ `Thumbtip Reach` +
`Acromial Height - Sitting`, data = df)
step_model <- stepAIC(model, direction = "both")
summary(step_model)
# Generate predicted values and confidence intervals
df$cyclic_pct_fwd_predicted <- predict(step_model)
pred_frame <- data.frame(
predicted = df$cyclic_pct_fwd_predicted,
actual = df$cyclic_pct_fwd,
ID = df$ID
)
# Extract coefficients and R-squared
coefs <- coef(step_model)
eq <- paste0(
"fwd_deg = ", round(coefs[1], 2),
ifelse(coefs[2] < 0, " - ", " + "), abs(round(coefs[2], 2)), " × ", names(coefs)[2]
)
if (length(coefs) > 2) {
for (i in 3:length(coefs)) {
eq <- paste0(
eq,
ifelse(coefs[i] < 0, " - ", " + "), abs(round(coefs[i], 2)), " × ", names(coefs)[i]
)
}
}
r_squared <- summary(step_model)$r.squared
subtitle_text <- paste(eq, sprintf("  |  R² = %.2f", r_squared))
ggplot(pred_frame, aes(x = predicted, y = actual)) +
geom_point(size = 3, color = "steelblue") +
geom_smooth(method = "lm", se = TRUE, level = 0.95, color = "black", fill = "lightblue", linetype = "solid") +
geom_abline(slope = 1, intercept = 0, linetype = "dashed", color = "gray") +
labs(
title = "Predicted vs Actual Zone 1 Cyclic Fwd Reach (%)",
subtitle = subtitle_text,
x = "Predicted Zone 1 Fwd Cyclic (%)",
y = "Actual Zone 1 Fwd Cyclic (%)"
) +
geom_text(
data = pred_frame %>% as.data.frame(),
aes(label = ID, x = predicted, y = actual),
vjust = -1, hjust = 1, size = 3
) +
theme(
plot.margin = margin(t = 10, r = 50, b = 10, l = 10)
) +
theme_minimal()
#Join anthros
# Extract full forward and aft values from the control data
cyclic_limits <- df_range_of_motion %>%
filter(adjustment == "cyclic_fwd") %>%
dplyr::select(min, max) %>%
slice(1)  # In case there's more than one row
df <- df_motion %>%
mutate(
ID = as.numeric(ID),
cyclic_pct_fwd = ((cyclic_limits$max-fwd_deg)/(cyclic_limits$max-cyclic_limits$min))*100
) %>%
left_join(df_anthros %>% mutate(ID = as.numeric(ID)), by = "ID")
cor_test_result <- cor.test(df$`Thumbtip Reach`, df$cyclic_pct_fwd, method = "pearson")
cor_value <- round(cor_test_result$estimate, 2)
# Print detailed summary
print(cor_test_result)
ggplot(df, aes(x = `Thumbtip Reach`, y = cyclic_pct_fwd)) +
geom_point(size = 3, color = "steelblue") +
labs(
title = "Zone 1 Cyclic Control Motion (% fwd) vs. Thumbtip Reach",
subtitle = paste0("Pearson correlation: r = ", cor_value),
x = "Thumbtip Reach (mm)",
y = "Cyclic Control Motion (% fwd)"
) +
geom_text(
data = df %>% as.data.frame(),
aes(label = ID, x = `Thumbtip Reach`, y = cyclic_pct_fwd),
vjust = -1, hjust = 1, size = 3
) +
# Correlation line with 95% CI
geom_smooth(method = "lm", se = TRUE,level = 0.95, color = "blue", linewidth = 0.8) +
theme_minimal()
# Fit linear model
model <- lm(cyclic_pct_fwd ~ `Thumbtip Reach` +
`Acromial Height - Sitting`, data = df)
step_model <- stepAIC(model, direction = "both")
summary(step_model)
# Generate predicted values and confidence intervals
df$cyclic_pct_fwd_predicted <- predict(step_model)
pred_frame <- data.frame(
predicted = df$cyclic_pct_fwd_predicted,
actual = df$cyclic_pct_fwd,
ID = df$ID
)
# Extract coefficients and R-squared
coefs <- coef(step_model)
eq <- paste0(
"fwd_deg = ", round(coefs[1], 2),
ifelse(coefs[2] < 0, " - ", " + "), abs(round(coefs[2], 2)), " × ", names(coefs)[2]
)
if (length(coefs) > 2) {
for (i in 3:length(coefs)) {
eq <- paste0(
eq,
ifelse(coefs[i] < 0, " - ", " + "), abs(round(coefs[i], 2)), " × ", names(coefs)[i]
)
}
}
r_squared <- summary(step_model)$r.squared
subtitle_text <- paste(eq, sprintf("  |  R² = %.2f", r_squared))
ggplot(pred_frame, aes(x = predicted, y = actual)) +
geom_point(size = 3, color = "steelblue") +
geom_smooth(method = "lm", se = TRUE, level = 0.95, color = "black", fill = "lightblue", linetype = "solid") +
geom_abline(slope = 1, intercept = 0, linetype = "dashed", color = "gray") +
labs(
title = "Predicted vs Actual Zone 1 Cyclic Fwd Reach (%)",
subtitle = subtitle_text,
x = "Predicted Zone 1 Fwd Cyclic (%)",
y = "Actual Zone 1 Fwd Cyclic (%)"
) +
geom_text(
data = pred_frame %>% as.data.frame(),
aes(label = ID, x = predicted, y = actual),
vjust = -1, hjust = 1, size = 3
) +
theme(
plot.margin = margin(t = 10, r = 50, b = 10, l = 10)
) +
theme_minimal()
