df_summary <- df_new %>%
mutate(predicted_class = ifelse(y_predicted < 38, "Dissaccommodated", "Accommodated")) %>%
group_by(Sex, predicted_class) %>%
count() %>%
group_by(Sex) %>%
mutate(percentage = round(100 * n / sum(n), 1)) %>%
ungroup()
kable(df_summary, caption = "Accommodation of Head Clearance (38 mm)")
df_new <- data_frame()
#Join anthros
df <- df_head_clear %>%
mutate(ID = as.numeric(ID)) %>%
left_join(df_anthros %>% mutate(ID = as.numeric(ID)), by = "ID")
cor_test_result <- cor.test(df$`Sitting Height`, df$head_clear_mm, method = "pearson")
cor_value <- round(cor_test_result$estimate, 2)
# Print detailed summary
print(cor_test_result)
ggplot(df, aes(x = `Sitting Height`, y = head_clear_mm)) +
geom_point(size = 3, color = "steelblue") +
labs(
title = "Head Clearance vs. Sitting Height",
subtitle = paste0("Pearson correlation: r = ", cor_value),
x = "Sitting Height (mm)",
y = "Head Clearance (mm)"
) +
geom_text(
data = df %>% as.data.frame(),
aes(label = ID, x = `Sitting Height`, y = head_clear_mm),
vjust = -1, hjust = 1, size = 3
) +
scale_y_reverse()+
# Correlation line with 95% CI
geom_smooth(method = "lm", se = TRUE,level = 0.95, color = "blue", linewidth = 0.8) +
theme_minimal()
# Fit linear model
model <- lm(head_clear_mm ~ `Sitting Height`, data = df)
step_model <- stepAIC(model, direction = "both")
summary(step_model)
# Generate predicted values and confidence intervals
df$head_clear_mm_predicted <- predict(step_model)
pred_frame <- data.frame(
predicted = df$head_clear_mm_predicted,
actual = df$head_clear_mm,
ID = df$ID
)
# Extract coefficients and R-squared
coefs <- coef(step_model)
eq <- paste0(
"Head Clearance = ", round(coefs[1], 2),
ifelse(coefs[2] < 0, " - ", " + "), abs(round(coefs[2], 2)), " × ", names(coefs)[2]
)
if (length(coefs) > 2) {
for (i in 3:length(coefs)) {
eq <- paste0(
eq,
ifelse(coefs[i] < 0, " - ", " + "), abs(round(coefs[i], 2)), " × ", names(coefs)[i]
)
}
}
r_squared <- summary(step_model)$r.squared
subtitle_text <- paste(eq, sprintf("  |  R² = %.2f", r_squared))
ggplot(pred_frame, aes(x = predicted, y = actual)) +
geom_point(size = 3, color = "steelblue") +
geom_smooth(method = "lm", se = TRUE, level = 0.95, color = "black", fill = "lightblue", linetype = "solid") +
geom_abline(slope = 1, intercept = 0, linetype = "dashed", color = "gray") +
labs(
title = "Predicted vs Actual Head Clearance",
subtitle = subtitle_text,
x = "Predicted Head Clearance (mm)",
y = "Actual Head Clearance (mm)"
) +
geom_text(
data = pred_frame %>% as.data.frame(),
aes(label = ID, x = predicted, y = actual),
vjust = -1, hjust = 1, size = 3
) +
theme(
plot.margin = margin(t = 10, r = 50, b = 10, l = 10)
) +
scale_x_continuous(limits = c(0,150)) +  # Define x-axis limit
geom_hline(yintercept = 38, linetype = "dashed", color = "red") + # helmet clearance 38 mm (1.5 in)
theme_minimal()
df_new <- data_frame()
df_new$y_predicted <- predict(model, newdata = df_new)
df_new$y_predicted <- predict(model, newdata = pop)
df_new <- data_frame()
df_new$y_predicted <- predict(model, newdata = pop)
df_new <- pop
df_new$y_predicted <- predict(model, newdata = pop)
#Join anthros
df <- df_head_clear %>%
mutate(ID = as.numeric(ID)) %>%
left_join(df_anthros %>% mutate(ID = as.numeric(ID)), by = "ID")
cor_test_result <- cor.test(df$`Sitting Height`, df$head_clear_mm, method = "pearson")
cor_value <- round(cor_test_result$estimate, 2)
# Print detailed summary
print(cor_test_result)
ggplot(df, aes(x = `Sitting Height`, y = head_clear_mm)) +
geom_point(size = 3, color = "steelblue") +
labs(
title = "Head Clearance vs. Sitting Height",
subtitle = paste0("Pearson correlation: r = ", cor_value),
x = "Sitting Height (mm)",
y = "Head Clearance (mm)"
) +
geom_text(
data = df %>% as.data.frame(),
aes(label = ID, x = `Sitting Height`, y = head_clear_mm),
vjust = -1, hjust = 1, size = 3
) +
scale_y_reverse()+
# Correlation line with 95% CI
geom_smooth(method = "lm", se = TRUE,level = 0.95, color = "blue", linewidth = 0.8) +
theme_minimal()
# Fit linear model
model <- lm(head_clear_mm ~ `Sitting Height`, data = df)
step_model <- stepAIC(model, direction = "both")
summary(step_model)
# Generate predicted values and confidence intervals
df$head_clear_mm_predicted <- predict(step_model)
pred_frame <- data.frame(
predicted = df$head_clear_mm_predicted,
actual = df$head_clear_mm,
ID = df$ID
)
# Extract coefficients and R-squared
coefs <- coef(step_model)
eq <- paste0(
"Head Clearance = ", round(coefs[1], 2),
ifelse(coefs[2] < 0, " - ", " + "), abs(round(coefs[2], 2)), " × ", names(coefs)[2]
)
if (length(coefs) > 2) {
for (i in 3:length(coefs)) {
eq <- paste0(
eq,
ifelse(coefs[i] < 0, " - ", " + "), abs(round(coefs[i], 2)), " × ", names(coefs)[i]
)
}
}
r_squared <- summary(step_model)$r.squared
subtitle_text <- paste(eq, sprintf("  |  R² = %.2f", r_squared))
ggplot(pred_frame, aes(x = predicted, y = actual)) +
geom_point(size = 3, color = "steelblue") +
geom_smooth(method = "lm", se = TRUE, level = 0.95, color = "black", fill = "lightblue", linetype = "solid") +
geom_abline(slope = 1, intercept = 0, linetype = "dashed", color = "gray") +
labs(
title = "Predicted vs Actual Head Clearance",
subtitle = subtitle_text,
x = "Predicted Head Clearance (mm)",
y = "Actual Head Clearance (mm)"
) +
geom_text(
data = pred_frame %>% as.data.frame(),
aes(label = ID, x = predicted, y = actual),
vjust = -1, hjust = 1, size = 3
) +
theme(
plot.margin = margin(t = 10, r = 50, b = 10, l = 10)
) +
scale_x_continuous(limits = c(0,150)) +  # Define x-axis limit
geom_hline(yintercept = 38, linetype = "dashed", color = "red") + # helmet clearance 38 mm (1.5 in)
theme_minimal()
df_new <- pop
df_new$y_predicted <- predict(model, newdata = pop)
df_summary <- df_new %>%
mutate(predicted_class = ifelse(y_predicted < 38, "Dissaccommodated", "Accommodated")) %>%
group_by(Sex, predicted_class) %>%
count() %>%
group_by(Sex) %>%
mutate(percentage = round(100 * n / sum(n), 1)) %>%
ungroup()
kable(df_summary, caption = "Accommodation of Head Clearance (38 mm)")
#Join anthros
df <- df_head_clear %>%
mutate(ID = as.numeric(ID)) %>%
left_join(df_anthros %>% mutate(ID = as.numeric(ID)), by = "ID")
cor_test_result <- cor.test(df$`Sitting Height`, df$head_clear_mm, method = "pearson")
cor_value <- round(cor_test_result$estimate, 2)
# Print detailed summary
print(cor_test_result)
ggplot(df, aes(x = `Sitting Height`, y = head_clear_mm)) +
geom_point(size = 3, color = "steelblue") +
labs(
title = "Head Clearance vs. Sitting Height",
subtitle = paste0("Pearson correlation: r = ", cor_value),
x = "Sitting Height (mm)",
y = "Head Clearance (mm)"
) +
geom_text(
data = df %>% as.data.frame(),
aes(label = ID, x = `Sitting Height`, y = head_clear_mm),
vjust = -1, hjust = 1, size = 3
) +
scale_y_reverse()+
# Correlation line with 95% CI
geom_smooth(method = "lm", se = TRUE,level = 0.95, color = "blue", linewidth = 0.8) +
theme_minimal()
# Fit linear model
model <- lm(head_clear_mm ~ `Sitting Height`, data = df)
step_model <- stepAIC(model, direction = "both")
summary(step_model)
# Generate predicted values and confidence intervals
df$head_clear_mm_predicted <- predict(step_model)
pred_frame <- data.frame(
predicted = df$head_clear_mm_predicted,
actual = df$head_clear_mm,
ID = df$ID
)
# Extract coefficients and R-squared
coefs <- coef(step_model)
eq <- paste0(
"Head Clearance = ", round(coefs[1], 2),
ifelse(coefs[2] < 0, " - ", " + "), abs(round(coefs[2], 2)), " × ", names(coefs)[2]
)
if (length(coefs) > 2) {
for (i in 3:length(coefs)) {
eq <- paste0(
eq,
ifelse(coefs[i] < 0, " - ", " + "), abs(round(coefs[i], 2)), " × ", names(coefs)[i]
)
}
}
r_squared <- summary(step_model)$r.squared
subtitle_text <- paste(eq, sprintf("  |  R² = %.2f", r_squared))
ggplot(pred_frame, aes(x = predicted, y = actual)) +
geom_point(size = 3, color = "steelblue") +
geom_smooth(method = "lm", se = TRUE, level = 0.95, color = "black", fill = "lightblue", linetype = "solid") +
geom_abline(slope = 1, intercept = 0, linetype = "dashed", color = "gray") +
labs(
title = "Predicted vs Actual Head Clearance",
subtitle = subtitle_text,
x = "Predicted Head Clearance (mm)",
y = "Actual Head Clearance (mm)"
) +
geom_text(
data = pred_frame %>% as.data.frame(),
aes(label = ID, x = predicted, y = actual),
vjust = -1, hjust = 1, size = 3
) +
theme(
plot.margin = margin(t = 10, r = 50, b = 10, l = 10)
) +
scale_x_continuous(limits = c(0,150)) +  # Define x-axis limit
geom_hline(yintercept = 38, linetype = "dashed", color = "red") + # helmet clearance 38 mm (1.5 in)
annotate("text", x = Inf, y = 38, label = "Dissaccommodated", hjust = 1.1, vjust = -0.5, color = "red")+
annotate("text", x = Inf, y = 38, label = "Accommodated", hjust = 1.1, vjust = 1.5, color = "blue")+
theme_minimal()
df_new <- pop
df_new$y_predicted <- predict(model, newdata = pop)
df_summary <- df_new %>%
mutate(predicted_class = ifelse(y_predicted < 38, "Dissaccommodated", "Accommodated")) %>%
group_by(Sex, predicted_class) %>%
count() %>%
group_by(Sex) %>%
mutate(percentage = round(100 * n / sum(n), 1)) %>%
ungroup()
kable(df_summary, caption = "Accommodation of Head Clearance (38 mm)")
#Join anthros
df <- df_head_clear %>%
mutate(ID = as.numeric(ID)) %>%
left_join(df_anthros %>% mutate(ID = as.numeric(ID)), by = "ID")
cor_test_result <- cor.test(df$`Sitting Height`, df$head_clear_mm, method = "pearson")
cor_value <- round(cor_test_result$estimate, 2)
# Print detailed summary
print(cor_test_result)
ggplot(df, aes(x = `Sitting Height`, y = head_clear_mm)) +
geom_point(size = 3, color = "steelblue") +
labs(
title = "Head Clearance vs. Sitting Height",
subtitle = paste0("Pearson correlation: r = ", cor_value),
x = "Sitting Height (mm)",
y = "Head Clearance (mm)"
) +
geom_text(
data = df %>% as.data.frame(),
aes(label = ID, x = `Sitting Height`, y = head_clear_mm),
vjust = -1, hjust = 1, size = 3
) +
scale_y_reverse()+
# Correlation line with 95% CI
geom_smooth(method = "lm", se = TRUE,level = 0.95, color = "blue", linewidth = 0.8) +
theme_minimal()
# Fit linear model
model <- lm(head_clear_mm ~ `Sitting Height`, data = df)
step_model <- stepAIC(model, direction = "both")
summary(step_model)
# Generate predicted values and confidence intervals
df$head_clear_mm_predicted <- predict(step_model)
pred_frame <- data.frame(
predicted = df$head_clear_mm_predicted,
actual = df$head_clear_mm,
ID = df$ID
)
# Extract coefficients and R-squared
coefs <- coef(step_model)
eq <- paste0(
"Head Clearance = ", round(coefs[1], 2),
ifelse(coefs[2] < 0, " - ", " + "), abs(round(coefs[2], 2)), " × ", names(coefs)[2]
)
if (length(coefs) > 2) {
for (i in 3:length(coefs)) {
eq <- paste0(
eq,
ifelse(coefs[i] < 0, " - ", " + "), abs(round(coefs[i], 2)), " × ", names(coefs)[i]
)
}
}
r_squared <- summary(step_model)$r.squared
subtitle_text <- paste(eq, sprintf("  |  R² = %.2f", r_squared))
ggplot(pred_frame, aes(x = predicted, y = actual)) +
geom_point(size = 3, color = "steelblue") +
geom_smooth(method = "lm", se = TRUE, level = 0.95, color = "black", fill = "lightblue", linetype = "solid") +
geom_abline(slope = 1, intercept = 0, linetype = "dashed", color = "gray") +
labs(
title = "Predicted vs Actual Head Clearance",
subtitle = subtitle_text,
x = "Predicted Head Clearance (mm)",
y = "Actual Head Clearance (mm)"
) +
geom_text(
data = pred_frame %>% as.data.frame(),
aes(label = ID, x = predicted, y = actual),
vjust = -1, hjust = 1, size = 3
) +
theme(
plot.margin = margin(t = 10, r = 50, b = 10, l = 10)
) +
scale_x_continuous(limits = c(0,150)) +  # Define x-axis limit
geom_hline(yintercept = 38, linetype = "dashed", color = "red") + # helmet clearance 38 mm (1.5 in)
annotate("text", x = Inf, y = 38, label = "Accommodated", hjust = 1.1, vjust = -0.5, color = "blue")+
annotate("text", x = Inf, y = 38, label = "Dissaccommodated", hjust = 1.1, vjust = 1.5, color = "red")+
theme_minimal()
df_new <- pop
df_new$y_predicted <- predict(model, newdata = pop)
df_summary <- df_new %>%
mutate(predicted_class = ifelse(y_predicted < 38, "Dissaccommodated", "Accommodated")) %>%
group_by(Sex, predicted_class) %>%
count() %>%
group_by(Sex) %>%
mutate(percentage = round(100 * n / sum(n), 1)) %>%
ungroup()
kable(df_summary, caption = "Accommodation of Head Clearance (38 mm)")
#Join anthros
df <- df_head_clear %>%
mutate(ID = as.numeric(ID)) %>%
left_join(df_anthros %>% mutate(ID = as.numeric(ID)), by = "ID")
cor_test_result <- cor.test(df$`Sitting Height`, df$head_clear_mm, method = "pearson")
cor_value <- round(cor_test_result$estimate, 2)
# Print detailed summary
print(cor_test_result)
ggplot(df, aes(x = `Sitting Height`, y = head_clear_mm)) +
geom_point(size = 3, color = "steelblue") +
labs(
title = "Head Clearance vs. Sitting Height",
subtitle = paste0("Pearson correlation: r = ", cor_value),
x = "Sitting Height (mm)",
y = "Head Clearance (mm)"
) +
geom_text(
data = df %>% as.data.frame(),
aes(label = ID, x = `Sitting Height`, y = head_clear_mm),
vjust = -1, hjust = 1, size = 3
) +
scale_y_reverse()+
# Correlation line with 95% CI
geom_smooth(method = "lm", se = TRUE,level = 0.95, color = "blue", linewidth = 0.8) +
theme_minimal()
# Fit linear model
model <- lm(head_clear_mm ~ `Sitting Height`, data = df)
step_model <- stepAIC(model, direction = "both")
summary(step_model)
# Generate predicted values and confidence intervals
df$head_clear_mm_predicted <- predict(step_model)
pred_frame <- data.frame(
predicted = df$head_clear_mm_predicted,
actual = df$head_clear_mm,
ID = df$ID
)
# Extract coefficients and R-squared
coefs <- coef(step_model)
eq <- paste0(
"Head Clearance = ", round(coefs[1], 2),
ifelse(coefs[2] < 0, " - ", " + "), abs(round(coefs[2], 2)), " × ", names(coefs)[2]
)
if (length(coefs) > 2) {
for (i in 3:length(coefs)) {
eq <- paste0(
eq,
ifelse(coefs[i] < 0, " - ", " + "), abs(round(coefs[i], 2)), " × ", names(coefs)[i]
)
}
}
r_squared <- summary(step_model)$r.squared
subtitle_text <- paste(eq, sprintf("  |  R² = %.2f", r_squared))
ggplot(pred_frame, aes(x = predicted, y = actual)) +
geom_point(size = 3, color = "steelblue") +
geom_smooth(method = "lm", se = TRUE, level = 0.95, color = "black", fill = "lightblue", linetype = "solid") +
geom_abline(slope = 1, intercept = 0, linetype = "dashed", color = "gray") +
labs(
title = "Predicted vs Actual Head Clearance",
subtitle = subtitle_text,
x = "Predicted Head Clearance (mm)",
y = "Actual Head Clearance (mm)"
) +
geom_text(
data = pred_frame %>% as.data.frame(),
aes(label = ID, x = predicted, y = actual),
vjust = -1, hjust = 1, size = 3
) +
theme(
plot.margin = margin(t = 10, r = 50, b = 10, l = 10)
) +
scale_x_continuous(limits = c(0,150)) +  # Define x-axis limit
geom_hline(yintercept = 38, linetype = "dashed", color = "red") + # helmet clearance 38 mm (1.5 in)
annotate("text", x = Inf, y = 38, label = "Accommodated (helmet)", hjust = 1.1, vjust = -0.5, color = "blue")+
annotate("text", x = Inf, y = 38, label = "Dissaccommodated (helmet)", hjust = 1.1, vjust = 1.5, color = "red")+
theme_minimal()
df_new <- pop
df_new$y_predicted <- predict(model, newdata = pop)
df_summary <- df_new %>%
mutate(predicted_class = ifelse(y_predicted < 38, "Dissaccommodated", "Accommodated")) %>%
group_by(Sex, predicted_class) %>%
count() %>%
group_by(Sex) %>%
mutate(percentage = round(100 * n / sum(n), 1)) %>%
ungroup()
kable(df_summary, caption = "Accommodation of Head Clearance (38 mm)")
#Join anthros
df <- df_head_clear %>%
mutate(ID = as.numeric(ID)) %>%
left_join(df_anthros %>% mutate(ID = as.numeric(ID)), by = "ID")
cor_test_result <- cor.test(df$`Sitting Height`, df$head_clear_mm, method = "pearson")
cor_value <- round(cor_test_result$estimate, 2)
# Print detailed summary
print(cor_test_result)
ggplot(df, aes(x = `Sitting Height`, y = head_clear_mm)) +
geom_point(size = 3, color = "steelblue") +
labs(
title = "Head Clearance vs. Sitting Height",
subtitle = paste0("Pearson correlation: r = ", cor_value),
x = "Sitting Height (mm)",
y = "Head Clearance (mm)"
) +
geom_text(
data = df %>% as.data.frame(),
aes(label = ID, x = `Sitting Height`, y = head_clear_mm),
vjust = -1, hjust = 1, size = 3
) +
scale_y_reverse()+
# Correlation line with 95% CI
geom_smooth(method = "lm", se = TRUE,level = 0.95, color = "blue", linewidth = 0.8) +
theme_minimal()
# Fit linear model
model <- lm(head_clear_mm ~ `Sitting Height`, data = df)
step_model <- stepAIC(model, direction = "both")
summary(step_model)
# Generate predicted values and confidence intervals
df$head_clear_mm_predicted <- predict(step_model)
pred_frame <- data.frame(
predicted = df$head_clear_mm_predicted,
actual = df$head_clear_mm,
ID = df$ID
)
# Extract coefficients and R-squared
coefs <- coef(step_model)
eq <- paste0(
"Head Clearance = ", round(coefs[1], 2),
ifelse(coefs[2] < 0, " - ", " + "), abs(round(coefs[2], 2)), " × ", names(coefs)[2]
)
if (length(coefs) > 2) {
for (i in 3:length(coefs)) {
eq <- paste0(
eq,
ifelse(coefs[i] < 0, " - ", " + "), abs(round(coefs[i], 2)), " × ", names(coefs)[i]
)
}
}
r_squared <- summary(step_model)$r.squared
subtitle_text <- paste(eq, sprintf("  |  R² = %.2f", r_squared))
ggplot(pred_frame, aes(x = predicted, y = actual)) +
geom_point(size = 3, color = "steelblue") +
geom_smooth(method = "lm", se = TRUE, level = 0.95, color = "black", fill = "lightblue", linetype = "solid") +
geom_abline(slope = 1, intercept = 0, linetype = "dashed", color = "gray") +
labs(
title = "Predicted vs Actual Head Clearance",
subtitle = subtitle_text,
x = "Predicted Head Clearance (mm)",
y = "Actual Head Clearance (mm)"
) +
geom_text(
data = pred_frame %>% as.data.frame(),
aes(label = ID, x = predicted, y = actual),
vjust = -1, hjust = 1, size = 3
) +
theme(
plot.margin = margin(t = 10, r = 50, b = 10, l = 10)
) +
scale_x_continuous(limits = c(0,150)) +  # Define x-axis limit
geom_hline(yintercept = 38, linetype = "dashed", color = "red") + # helmet clearance 38 mm (1.5 in)
annotate("text", x = Inf, y = 38, label = "Accommodated (helmet)", hjust = 1.1, vjust = -0.5, color = "blue")+
annotate("text", x = Inf, y = 38, label = "Dissaccommodated (helmet)", hjust = 1.1, vjust = 1.5, color = "red")+
theme_minimal()
df_new <- pop
df_new$y_predicted <- predict(model, newdata = pop)
df_summary <- df_new %>%
mutate(predicted_class = ifelse(y_predicted < 38, "Dissaccommodated", "Accommodated")) %>%
group_by(Sex, predicted_class) %>% drop_na %>%
count() %>%
group_by(Sex) %>%
mutate(percentage = round(100 * n / sum(n), 1)) %>%
ungroup()
kable(df_summary, caption = "Accommodation of Head Clearance (Helmet Thickness 38 mm)")
